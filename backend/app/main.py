# backend/app/main.py
# (–ò–º–ø–æ—Ä—Ç—ã FastAPI, asyncio, db, bot –∏ —Ç.–¥. –æ—Å—Ç–∞—é—Ç—Å—è)

app = FastAPI(title="TG MiniApp Backend")
# ... CORS, startup event ...

# --- Pydantic-—Å—Ö–µ–º—ã ---
# ... InitPayload ...
class InitPayload(BaseModel): #...

# --- ‚ú® –ò–ó–ú–ï–ù–ï–ù–ò–ï: bet_amount -> min_bet_amount ---
class CreatePollPayload(BaseModel):
    telegram_id: int
    question: str
    options: list[str]
    min_bet_amount: int

# --- ‚ú® –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ amount ---
class PlaceBetPayload(BaseModel):
    telegram_id: int
    poll_id: int
    option_id: int
    amount: int

# ... ClosePollPayload, OpenChestPayload ...
class ClosePollPayload(BaseModel): #...
class OpenChestPayload(BaseModel): #...

# --- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
@app.post("/api/auth")
async def api_auth(payload: InitPayload): # ...
@app.get("/api/me/{telegram_id}")
async def api_me(telegram_id: int): # ...

# --- –û–ø—Ä–æ—Å—ã ---
# --- ‚ú® –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ø—Ä–∏–Ω–∏–º–∞–µ–º min_bet_amount ---
@app.post("/api/polls")
async def api_create_poll(payload: CreatePollPayload):
    try:
        # ...
        poll_id = db.create_poll(
            payload.telegram_id, payload.question, payload.options, payload.min_bet_amount
        )
        # ...
    except Exception as e: # ...

@app.get("/api/polls")
async def api_list_polls(): # ... –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

@app.get("/api/polls/{poll_id}")
async def api_get_poll(poll_id: int): # ... –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π

# --- ‚ú® –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ø—Ä–∏–Ω–∏–º–∞–µ–º –∏ –ø–µ—Ä–µ–¥–∞–µ–º amount ---
@app.post("/api/bet")
async def api_place_bet(payload: PlaceBetPayload):
    try:
        print("üì• /api/bet payload:", payload.dict())
        res = db.place_bet(payload.telegram_id, payload.poll_id, payload.option_id, payload.amount)
        print("üì§ bet result:", res)
        if not res.get("ok"):
            raise HTTPException(status_code=400, detail=res.get("error"))
        return res
    except Exception as e: # ...

# ... /api/polls/close, –°—É–Ω–¥—É–∫–∏, –†–µ–π—Ç–∏–Ω–≥ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
@app.post("/api/polls/close")
async def api_close_poll(payload: ClosePollPayload): #...
@app.get("/api/chests")
async def api_chests(): #...
@app.post("/api/chests/open")
async def api_open_chest(payload: OpenChestPayload): #...
@app.get("/api/rating")
async def api_rating(): #...

